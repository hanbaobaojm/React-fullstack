{"version":3,"sources":["components/header/Header.js","App.less","assets/images/writing.png","api/ajax.js","utils/memoryUtils.js","utils/storageUtils.js","pages/login/Login.js","config/menuConfig.js","components/leftnav/LeftNav.js","components/linkbutton/LinkButton.js","pages/category/CollectionCreateForm.js","pages/category/Category.js","pages/charts/Bar.js","pages/charts/Line.js","pages/charts/Pie.js","pages/product/ProductDetails.js","pages/product/ProductHome.js","pages/product/Add-Update.js","pages/product/Product.js","pages/role/AddForm.js","pages/role/Role.js","pages/user/AddUser.js","pages/user/User.js","pages/home/Home.js","pages/admin/Admin.js","App.js","index.js"],"names":["inter","getCategory","parentId","axios","get","params","getCategoryById","categoryId","memoryUtils","user","USER_KEY","storageUtils","saveUser","localStorage","setItem","JSON","stringify","getUser","parse","getItem","removeUser","removeItem","Login","_id","to","className","src","logo","alt","name","onFinish","values","username","password","Promise","resolve","reject","post","then","response","data","catch","error","message","status","success","props","history","replace","msg","onFinishFailed","errorInfo","console","log","Item","label","rules","required","Password","type","htmlType","React","Component","menuList","title","key","icon","AppstoreOutlined","isPublic","ContainerOutlined","children","TeamOutlined","SolutionOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartOutlined","SubMenu","Menu","LeftNav","path","indexOf","openKey","menuNodes","getMenuNodes","map","item","menus","role","find","child","hasAuth","citem","style","width","selectedKeys","defaultOpenKeys","mode","theme","LinkButton","text","click","onClick","page","forEach","t","confirm","Modal","showConfirm","onOk","clearInterval","window","location","reload","Header","useState","Date","toLocaleString","time","setTime","setInterval","currentTime","Option","Select","CollectionCreateForm","visible","onCreate","onCancel","category","Form","useForm","form","useEffect","setFieldsValue","onReset","resetFields","okText","cancelText","getContainer","destroyOnClose","validateFields","info","layout","value","placeholder","Category","formRef","createRef","getDetail","id","setState","categories","parentName","rank","subCategories","createCategory","createVisible","updateCategory","catName","current","updateVisible","delCategory","Id","parent","delete","deletedCount","handleCancel","handleSubmit","state","addCategory","handleEdit","categoryName","columns","dataIndex","render","size","this","extra","PlusOutlined","bordered","rowKey","dataSource","ref","initialValues","Bar","VictoryTheme","material","fill","alignment","x","y","Linechart","stroke","border","Pie","ProductDetails","cname","setCname","pname","setPname","cid","pid","pCategoryId","name2","ArrowLeftOutlined","back","color","desc","price","Search","Input","ProductHome","getProducts","num","pageNum","pageSize","product","list","total","productList","totalProduct","onChange","pageNow","searchInput","searchProducts","updateStatus","productId","updateProductStatus","productName","onSearch","showDetail","push","record","allowClear","enterButton","pagination","textAlign","defaultPageSize","defaultCurrent","TextArea","labelCol","span","wrapperCol","addProducts","addProduct","AddUpdate","firstCategory","setFirstCategory","childCategory","setChildCategory","count","setCount","options","setOptions","targetOption","setTargetOption","updateProducts","updateProduct","getCategories","loading","pcatList","isLeaf","initialValue","autoSize","getFieldValue","validator","rule","suffix","loadData","selectedOptions","length","changeOnSelect","Product","component","exact","AddForm","Role","roleList","setRoleList","setRole","counter","setCounter","add","setAdd","set","setSet","checkedKeys","setCheckedKeys","getRoles","handleSetSubmit","updateRole","role_id","auth_time","disabled","rowSelection","selectedRowKeys","onSelect","onRow","event","roleName","auth_name","checkable","defaultExpandAll","onCheck","treeData","validateMessages","types","email","AddUser","number","newUser","phone","hidden","User","userList","setUserList","setUser","addTitle","setAddTitle","getUsers","users","roles","delUser","userId","create_time","updateUsers","addUser","updateUser","Home","Footer","Layout","Sider","Content","Admin","height","pathname","margin","backgroundColor","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.02478f46.chunk.js","sourcesContent":["import React, {useState}from 'react';\r\nimport './header.css'\r\nimport {Modal} from \"antd\";\r\nimport menuList from \"../../config/menuConfig\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport LinkButton from \"../linkbutton/LinkButton\";\r\n\r\nconst page = (path) => {\r\n    if(path.indexOf('/product')>=0)\r\n        path = '/product';\r\n    let title;\r\n    menuList.forEach(citem => {\r\n        //console.log('key: ' + citem.key)\r\n        if(citem.key===path) {\r\n            title = citem.title;\r\n        }\r\n        else if(citem.children){\r\n            const t = citem.children.find(item => item.key===path);\r\n            if(t){\r\n                title = t.title;\r\n            }\r\n        }\r\n    });\r\n    return title;\r\n};\r\nconst { confirm } = Modal;\r\nlet inter;\r\nfunction showConfirm() {\r\n    confirm({\r\n        title: 'Are you Sure to sign out?',\r\n        onOk() {\r\n            console.log('OK');\r\n            storageUtils.removeUser();\r\n            memoryUtils.user = {};\r\n            clearInterval(inter);\r\n            //link = \"login\"\r\n            window.location.reload();\r\n        },\r\n    });\r\n}\r\nconst Header = ({user,path}) => {\r\n    const [time, setTime]=useState(new Date().toLocaleString());\r\n    inter = setInterval(()=>{\r\n            const currentTime = new Date().toLocaleString();\r\n            setTime(currentTime);\r\n        },1000);\r\n    return(\r\n        <div className='header'>\r\n            <div className='headerTop'>\r\n                <span>Welcome, {user}</span>\r\n                <LinkButton click={showConfirm} text='Sign out'/>\r\n            </div>\r\n            <div className='headerBottom'>\r\n                <div className='headerBottomLeft'>{page(path)}</div>\r\n                <div className='headerBottomRight'>{time}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Header","export default __webpack_public_path__ + \"static/media/App.e013c7a8.less\";","export default __webpack_public_path__ + \"static/media/writing.9ee194df.png\";","import axios from \"axios\";\r\nimport {message} from \"antd\";\r\n//const baseUrl = '/api/persons'\r\n\r\nexport const reqLogin = (username,password) => {\r\n    return new Promise((resolve,reject) => {\r\n        let promise = axios.post('/login',{username,password});\r\n        promise.then(response=>{\r\n            resolve(response.data)\r\n            // Success\r\n        }).catch(error => {\r\n            //failed\r\n            message.error(error.message)\r\n        })\r\n    })\r\n};\r\nexport const addUser = user => axios.post('/manage/user/add',user);\r\nexport const updateUser = user => axios.post('/manage/user/update',user);\r\nexport const deleteUser = (id) => axios.delete('/manage/user/delete',{data: {\r\n        userId: id\r\n    }});\r\nexport const getUser = () => axios.get('/manage/user/list');\r\nexport const getRole = () => axios.get('/manage/role/list');\r\nexport const addRole = (roleName) => axios.post('/manage/role/add',{roleName:roleName});\r\nexport const updateRole = role => axios.post('/manage/role/update',role);\r\nexport const getCategory = (parentId) => axios.get('/manage/category/list', {params: {parentId:parentId}});\r\nexport const getCategoryById = (categoryId) => axios.get('/manage/category/info', {params: {categoryId:categoryId}});\r\nexport const addCategory = category => axios.post('/manage/category/add',category);\r\nexport const updateCategory = category => axios.post('/manage/category/update', category);\r\nexport const deleteCategory = (id) => axios.delete('/manage/category/delete', {\r\n    data: {\r\n        categoryId: id\r\n    }\r\n});\r\nexport const getProduct = (pageNum,pageSize) => axios.get('/manage/product/list', {params: {pageNum:pageNum, pageSize:pageSize}});\r\nexport const updateProductStatus = ({productId, status}) => axios.post('/manage/product/updateStatus', {productId, status});\r\nexport const searchProduct = (pageNum,pageSize,productName) => axios.get('/manage/product/search', {params: {pageNum:pageNum, pageSize:pageSize, productName:productName}});\r\nexport const addProduct = product => axios.post('/manage/product/add',product);\r\nexport const updateProduct = product => axios.post('/manage/product/update',product);","/*\r\nSave data in memory\r\n*/\r\nconst memoryUtils = {\r\n    user:{}\r\n};\r\nexport default memoryUtils","/*to store and manage local data*/\r\nconst USER_KEY = 'user_key';\r\nconst saveUser = (user) => {\r\n    localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n};\r\nconst getUser = () => JSON.parse(localStorage.getItem(USER_KEY)||'{}');\r\nconst  removeUser = () => {\r\n    localStorage.removeItem(USER_KEY)\r\n};\r\nconst storageUtils = {saveUser,getUser,removeUser}\r\nexport default storageUtils","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './login.css';\r\nimport logo from '../../assets/images/writing.png';\r\nimport { Form, Input, Button, message} from 'antd';\r\nimport {reqLogin} from '../../api/ajax';\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\n/*\r\nlogin routing component\r\n*/\r\nclass Login extends React.Component {\r\n        render(){\r\n            const user = memoryUtils.user;\r\n            if(user && user._id){\r\n                return <Redirect to = '/home'/>\r\n            }\r\n            //console.log(this.props)\r\n        const onFinish = values => {\r\n            reqLogin(values.username, values.password).then(response => {\r\n\r\n                if (response.status === 0) {\r\n                    // login success\r\n                    message.success('Login Success!');\r\n                    memoryUtils.user = response.data;\r\n                    storageUtils.saveUser(response.data);\r\n                    this.props.history.replace('/') //don't need to go back to login page\r\n                } else {\r\n                    message.error(response.msg)\r\n                }\r\n            });\r\n            //console.log('Success:', values);\r\n        };\r\n        const onFinishFailed = errorInfo => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n        return (\r\n            <div className='login'>\r\n                <div className='loginHead'>\r\n                    <img src={logo} alt={logo}/>\r\n                    <h1>Background management system</h1>\r\n                </div>\r\n                <section className='loginBody'>\r\n                    <h2>Login</h2>\r\n                    <Form\r\n                        name=\"basic\"\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            rules={[{required: true, message: 'Please input your username!'}]}\r\n                        >\r\n                            <Input/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            rules={[{required: true, message: 'Please input your password!'}]}\r\n                        >\r\n                            <Input.Password/>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button className='btn1' type=\"primary\" htmlType=\"submit\">\r\n                                Login\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login","import {\r\n    AppstoreOutlined,\r\n    AreaChartOutlined,\r\n    ContainerOutlined,\r\n    SolutionOutlined,\r\n    TeamOutlined,\r\n    PieChartOutlined,\r\n    BarChartOutlined,\r\n    LineChartOutlined\r\n} from '@ant-design/icons';\r\nconst menuList = [\r\n    {\r\n        title: 'Main', //title shown on the page\r\n        key: '/home', //routing address\r\n        icon: <AppstoreOutlined />,//icon name\r\n        isPublic: true,\r\n    },\r\n    {\r\n        title: 'Product',\r\n        key: '/products',\r\n        icon: <ContainerOutlined />,\r\n        children:[\r\n            {\r\n                title: 'Category',\r\n                key: '/category',\r\n                icon: <ContainerOutlined/>\r\n            },\r\n            {\r\n                title: 'Items',\r\n                key: '/product',\r\n                icon: <ContainerOutlined/>\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: 'User',\r\n        key: '/user',\r\n        icon: <TeamOutlined />\r\n    },\r\n    {\r\n        title: 'Role',\r\n        key: '/role',\r\n        icon: <SolutionOutlined/>\r\n    },\r\n    {\r\n        title: 'Chart',\r\n        key: '/charts',\r\n        icon: <AreaChartOutlined/>,\r\n        children:[\r\n            {\r\n                title: 'Bar Chart',\r\n                key: '/bar',\r\n                icon: <BarChartOutlined />\r\n            },\r\n            {\r\n                title: 'Line Chart',\r\n                key: '/line',\r\n                icon: <LineChartOutlined />\r\n            },\r\n            {\r\n                title: 'Pie Chart',\r\n                key: '/Pie',\r\n                icon: <PieChartOutlined />\r\n            }\r\n        ]\r\n    }\r\n];\r\nexport default menuList","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Menu } from 'antd';\r\nimport './leftnav.css';\r\nimport logo from '../../assets/images/writing.png';\r\nimport menuList from \"../../config/menuConfig\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst LeftNav = ({path}) => {\r\n    if(path.indexOf('/product')>=0)\r\n        path = '/product';\r\n    //console.log(path);\r\n    let openKey = '/';\r\n    const hasAuth= item =>{\r\n        const key = item.key;\r\n        const menus = memoryUtils.user.role.menus;\r\n        const username = memoryUtils.user.username;\r\n        if(username==='admin'||item.isPublic||menus.indexOf(key)>=0)\r\n            return true;\r\n        else if(item.children){\r\n            return !!item.children.find(child=>menus.indexOf(child.key)>=0)\r\n        }\r\n        return false\r\n    };\r\n    const getMenuNodes = (menuList) => {\r\n        return menuList.map(item => {\r\n            if(hasAuth(item)) {\r\n                if (item.children) {\r\n                    const cItem = item.children.find(citem => citem.key === path);\r\n                    if (cItem) {\r\n                        openKey = item.key;\r\n                        // console.log(openKey);\r\n                    }\r\n                    return (\r\n                        <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n                            {getMenuNodes(item.children)}\r\n                        </SubMenu>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Menu.Item key={item.key} icon={item.icon}>\r\n                            <Link to={item.key}>\r\n                                {item.title}\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    )\r\n                }\r\n            }\r\n        })\r\n    }\r\n const menuNodes = getMenuNodes(menuList);\r\n return (\r\n        <div className='leftNav'>\r\n            <Link to='/home' className='leftNav-header'>\r\n                <img src={logo} alt='logo'/>\r\n                <h1>Management System</h1>\r\n            </Link>\r\n            <div style={{ width: 200 }}>\r\n                <Menu\r\n                    selectedKeys={[path]}\r\n                    defaultOpenKeys={[openKey]}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                >\r\n                    {menuNodes}\r\n                </Menu>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default LeftNav","import React from 'react';\r\nimport './linkButton.css'\r\nconst LinkButton = ({text,click}) => {\r\n    return(\r\n        <button className='link-button' onClick={click}>{text}</button>\r\n    )\r\n}\r\nexport default LinkButton","import React,{useEffect} from 'react';\r\nimport {Button, Modal, Form, Input, Select, message} from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst CollectionCreateForm = ({ visible, onCreate, onCancel, name, category }) => {\r\n    const [form] = Form.useForm();\r\n    useEffect(() => {\r\n        form.setFieldsValue({category:name});\r\n    }, [form,name]);\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n    const cancel = () =>{\r\n        onReset();\r\n        onCancel()\r\n    };\r\n    const update = () =>\r\n       category.map(item=>\r\n            <Option key={item._id} value={item.name}>{item.name}</Option>);\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"Create a new collection\"\r\n            okText=\"Create\"\r\n            cancelText=\"Cancel\"\r\n            onCancel={cancel}\r\n            getContainer={false}\r\n            destroyOnClose={false}\r\n            onOk={() =>{\r\n                form\r\n                    .validateFields()\r\n                    .then((values) => {\r\n                        form.resetFields();\r\n                        onCreate(values);\r\n                    })\r\n                    .catch((info) => {\r\n                        message.error('Validate Failed:', info);\r\n                    });\r\n            }}>\r\n            <Form\r\n                form={form}\r\n                layout=\"vertical\"\r\n                name=\"form_in_modal\">\r\n                <Form.Item\r\n                    name=\"category\"\r\n                    label=\"Category\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}>\r\n                    <Select>\r\n                        <Option value='0'>First class category</Option>\r\n                        {update()}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}>\r\n                    <Input placeholder=\"Please enter category name\"/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button htmlType=\"button\" onClick={onReset}>\r\n                        Reset\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\nexport default CollectionCreateForm","import React from 'react';\r\nimport {Card, Table, Space, Button, message, Modal, Form, Input} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport CollectionCreateForm from \"./CollectionCreateForm\";\r\nimport LinkButton from \"../../components/linkbutton/LinkButton\";\r\nimport './category.css'\r\nimport {getCategory,addCategory,updateCategory,deleteCategory} from '../../api/ajax';\r\n\r\nclass Category extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            subCategories: [],\r\n            parentName:'First class classification',\r\n            rank: '0',\r\n            createVisible:false,\r\n            updateVisible:false\r\n        };\r\n    }\r\n    formRef = React.createRef();\r\n    getDetail = (id,name) => {\r\n        getCategory(id).then(response => {\r\n            const category = response.data.data;\r\n            if(id==='0') {\r\n                this.setState({\r\n                    categories: category,\r\n                    parentName: 'First class classification',\r\n                    rank: '0'\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    subCategories: category,\r\n                    parentName: <div><LinkButton click={()=> {this.setState({rank:'0', parentName: 'First class classification'})}} text='First class classification'/> {name} </div>,\r\n                    rank: name\r\n                })\r\n            }\r\n        }).catch(error => message.error('Error: ' + error));\r\n    };\r\n    createCategory = () => {\r\n        this.setState({\r\n            createVisible:true\r\n        });\r\n    };\r\n    updateCategory = (name) => {\r\n        //console.log(this.formRef.current);\r\n        this.catName = name;\r\n        if(this.formRef.current)\r\n            this.formRef.current.setFieldsValue({name:name});\r\n        this.setState({\r\n            updateVisible:true\r\n        })\r\n    };\r\n    delCategory = (Id,name) => {\r\n        const { confirm } = Modal;\r\n        const parent = this;\r\n        confirm({\r\n            title: 'Are you Sure to delete all categories related to ' + name +'?',\r\n            onOk() {\r\n                //console.log(Id,name);\r\n                deleteCategory(Id).then(response=>{\r\n                    if(response.data.status===0) {\r\n                        //console.log(response.data)\r\n                        message.success(response.data.data.deletedCount + ' categories have been deleted');\r\n                        parent.getDetail('0', '')\r\n                    }\r\n                    else{\r\n                        message.error(response.data.msg)\r\n                    }\r\n                }).catch(error => message.error('Error: ' + error));\r\n            },\r\n        });\r\n    };\r\n    handleCancel = () => {\r\n        this.setState({\r\n            createVisible:false,\r\n            updateVisible:false\r\n        })\r\n    };\r\n    handleSubmit = (value) => {\r\n        let parentId;\r\n        if(value.category==='0')\r\n            parentId = '0';\r\n        else{\r\n            parentId = this.state.categories.find(item=>item.name===value.category)._id\r\n        }\r\n        const category = {\r\n            name: value.name,\r\n            parentId: parentId\r\n        };\r\n        //console.log(value.name,parentId);\r\n        addCategory(category).then(response=>{\r\n            if(response.data.status===0) {\r\n                message.success('Success Added!');\r\n                this.getDetail('0', '')\r\n            }\r\n            else{\r\n                message.error(response.data.msg)\r\n            }\r\n        }).catch(error => message.error('Error: ' + error));\r\n        this.handleCancel()\r\n    };\r\n    handleEdit = () => {\r\n        this.formRef.current\r\n            .validateFields()\r\n            .then((values) => {\r\n                this.formRef.current.resetFields();\r\n                let parentId;\r\n                if(this.state.rank==='0')\r\n                    parentId = this.state.categories.find(item=>item.name===this.catName)._id;\r\n                else\r\n                    parentId = this.state.subCategories.find(item=>item.name===this.catName)._id;\r\n                const category = {\r\n                    categoryName: values.name,\r\n                    categoryId: parentId\r\n                };\r\n                console.log(category);\r\n                updateCategory(category).then(response=>{\r\n                    console.log(response.data);\r\n                    if(response.data.status===0) {\r\n                        message.success('Success Changed!');\r\n                        this.getDetail('0', '')\r\n                    }\r\n                    else{\r\n                        message.error(response.data.msg)\r\n                    }\r\n                }).catch(error => message.error('Error: ' + error));\r\n\r\n            })\r\n            .catch((info) => {\r\n                message.error('Validate Failed:', info);\r\n            });\r\n        this.handleCancel()\r\n    };\r\n    columns = [\r\n            {\r\n                title: 'Category Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                //render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: 'Action',\r\n                key: 'action',\r\n                width:300,\r\n                render: (text) => (\r\n                    <Space size=\"middle\">\r\n                        <LinkButton click={()=>{this.updateCategory(text.name)}} text='Edit'/>\r\n                        {/*<LinkButton click={()=>{this.delCategory(text._id,text.name)}} text='Delete'/>*/}\r\n                        {this.state.rank === '0' ?\r\n                            <LinkButton click={() => this.getDetail(text._id, text.name)} text='Details'/> : null\r\n                        }\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n    componentDidMount() {\r\n        this.getDetail('0','')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='category'>\r\n                <Card title={this.state.parentName}\r\n                      extra={<Button onClick = {this.createCategory} type=\"primary\" icon={<PlusOutlined/>}>Add category</Button>}>\r\n                    <Table bordered\r\n                           rowKey='_id'\r\n                           columns={this.columns}\r\n                           dataSource={this.state.rank === '0'? this.state.categories:this.state.subCategories}/>\r\n                </Card>\r\n                <CollectionCreateForm\r\n                    visible={this.state.createVisible}\r\n                    onCreate={this.handleSubmit}\r\n                    onCancel={this.handleCancel}\r\n                    category = {this.state.categories}\r\n                    name = {this.state.rank}/>\r\n                <Modal title=\"Change category name\"\r\n                       visible={this.state.updateVisible}\r\n                       onOk={this.handleEdit}\r\n                       onCancel={this.handleCancel}>\r\n                    <Form ref={this.formRef}\r\n                        initialValues={{name: this.catName}}>\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            label=\"Name\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                },\r\n                            ]}>\r\n                            <Input/>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Category","import React from 'react';\r\nimport { VictoryChart,VictoryBar,VictoryTheme} from \"victory\";\r\nconst Bar = () => {\r\n    return(\r\n        <VictoryChart\r\n            theme={VictoryTheme.material}\r\n        >\r\n            <VictoryBar\r\n                style={{ data: { fill: 'cornflowerblue' } }}\r\n                alignment=\"start\"\r\n                data={[\r\n                    { x: 1, y: 2 },\r\n                    { x: 2, y: 3 },\r\n                    { x: 3, y: 5 },\r\n                    { x: 4, y: 4 },\r\n                    { x: 5, y: 7 }\r\n                ]}\r\n            />\r\n        </VictoryChart>\r\n    )\r\n}\r\nexport default Bar","import React from 'react';\r\nimport { VictoryChart,VictoryLine,VictoryTheme} from \"victory\";\r\nconst Linechart = () => {\r\n    return(\r\n        <VictoryChart\r\n            theme={VictoryTheme.material}\r\n        >\r\n            <VictoryLine\r\n                style={{\r\n                    data: { stroke: \"cornflowerblue\" },\r\n                    parent: { border: \"1px solid #ccc\"}\r\n                }}\r\n                data={[\r\n                    { x: 1, y: 2 },\r\n                    { x: 2, y: 3 },\r\n                    { x: 3, y: 5 },\r\n                    { x: 4, y: 4 },\r\n                    { x: 5, y: 7 }\r\n                ]}\r\n            />\r\n        </VictoryChart>\r\n    )\r\n};\r\nexport default Linechart","import React from 'react';\r\nimport { VictoryPie} from \"victory\";\r\nconst Pie = () => {\r\n    return(\r\n        <VictoryPie\r\n            data={[\r\n                { x: 1, y: 2 },\r\n                { x: 2, y: 3 },\r\n                { x: 3, y: 5 },\r\n                { x: 4, y: 4 },\r\n                { x: 5, y: 7 }\r\n            ]}\r\n        />\r\n    )\r\n}\r\nexport default Pie","import React, {useState,useEffect} from 'react';\r\nimport {Card, List,message} from \"antd\";\r\nimport {ArrowLeftOutlined} from '@ant-design/icons';\r\nimport {getCategoryById} from \"../../api/ajax\";\r\n\r\nconst ProductDetails = (props) => {\r\n    const[cname,setCname] = useState('');\r\n    const[pname,setPname] = useState('');\r\n    const data = props.location.state;\r\n    console.log(data)\r\n    const findCategory = (cid,pid)=>{\r\n        getCategoryById(cid).then(response=>{\r\n            if(response.data.status===0){\r\n                const name = response.data.data.name;\r\n                setCname(name)\r\n            }\r\n            else\r\n                message.error(response.data.msg)\r\n        }).catch(error=>message.error(error));\r\n        if(pid!=='0'){\r\n            getCategoryById(pid).then(response=>{\r\n                if(response.data.status===0){\r\n                    const name2 = response.data.data.name;\r\n                    setPname(name2)\r\n                }\r\n                else\r\n                    message.error(response.data.msg)\r\n            }).catch(error=>message.error(error))\r\n        }\r\n    };\r\n    useEffect(()=>{\r\n        findCategory(data.categoryId,data.pCategoryId)\r\n    },[data.categoryId,data.pCategoryId]);\r\n    return(\r\n        <Card title={<span><ArrowLeftOutlined onClick={()=>window.history.back()} style={{color:'cornflowerblue'}}/>Back</span>}>\r\n            <List>\r\n                <List.Item>\r\n                    <span className='left'>Product Name:</span>{data.name}\r\n                </List.Item>\r\n                <List.Item>\r\n                    <span className='left'>Product Description:</span>{data.desc}\r\n                </List.Item>\r\n                <List.Item>\r\n                    <span className='left'>Price:</span>{data.price} Euro\r\n                </List.Item>\r\n                <List.Item>\r\n                    <span className='left'>Product Category:</span>{pname===''?cname:cname+' -> '+pname}\r\n                </List.Item>\r\n            </List>\r\n        </Card>\r\n    )\r\n};\r\nexport default ProductDetails","import React from 'react';\r\nimport {Card, Button, Table, Space, Input, message, Pagination} from \"antd\";\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport LinkButton from \"../../components/linkbutton/LinkButton\";\r\nimport {getProduct,updateProductStatus,searchProduct} from \"../../api/ajax\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst productPerPage = 7;\r\nclass ProductHome extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productList: [],\r\n            pageNow:1,\r\n            totalProduct:1,\r\n            searchInput:''\r\n        };\r\n    }\r\n    getProducts= (page, num) => {\r\n        getProduct(page,num).then(response=>{\r\n            if(response.data.status===0) {\r\n                const product = response.data.data.list;\r\n                const total = response.data.data.total;\r\n                this.setState({\r\n                    productList:product,\r\n                    totalProduct:total\r\n                });\r\n                //console.log(product, total)\r\n            }else\r\n                message.error(response.data.msg)\r\n        }).catch(error => message.error('Error: ' + error));\r\n    };\r\n    onChange = page => {\r\n        this.setState({\r\n            pageNow:page\r\n        });\r\n        this.state.searchInput===''?this.getProducts(page,productPerPage):\r\n        this.searchProducts(this.state.searchInput,page)\r\n    };\r\n    updateStatus = (status,id) => {\r\n        //console.log(status,id);\r\n        const newStatus = status===1?2:1;\r\n        updateProductStatus({productId:id, status: newStatus}).then(response =>{\r\n            if(response.data.status===0) {\r\n                this.state.searchInput===''?this.getProducts(this.state.pageNow,productPerPage):\r\n                    this.searchProducts(this.state.searchInput,this.state.pageNow)\r\n            }else\r\n                message.error(response.data.msg)\r\n        }).catch(error=>message.error(error))\r\n    };\r\n    searchProducts = (value,page) =>{\r\n        searchProduct(page,productPerPage,value).then(response => {\r\n            if(response.data.status===0){\r\n                const product = response.data.data.list;\r\n                const total = response.data.data.total;\r\n                this.setState({\r\n                    productList:product,\r\n                    totalProduct:total\r\n                })\r\n               // console.log(product)\r\n            }\r\n            else\r\n                message.error(response.data.msg)\r\n        }).catch(error => message.error(error))\r\n    };\r\n    onSearch=value=>{\r\n        this.setState({\r\n            pageNow:1,\r\n            searchInput: value\r\n        });\r\n        this.searchProducts(value,1)\r\n    };\r\n    showDetail=(value)=>{\r\n        this.props.history.push('/product/detail',value)\r\n    };\r\n\r\n    columns = [\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'desc',\r\n            key: 'description',\r\n            width:600,\r\n        },\r\n        {\r\n            title: 'Price(Euro)',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (status,record) => {\r\n                return(\r\n                    <Space size=\"middle\">\r\n                        <span>{status===1? 'on sale':'sold out'}</span>\r\n                        <LinkButton click={()=>{this.updateStatus(status,record._id)}} text={status===1? 'sold out':'on sale'}/>\r\n                    </Space>\r\n                )},\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            width:120,\r\n            render: (text) => (\r\n                <Space size=\"middle\">\r\n                    <LinkButton click={()=>this.props.history.push('/product/addupdate',text)} text='Edit'/>\r\n                    <LinkButton click={() => this.showDetail(text)} text='Details'/>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n    componentDidMount() {\r\n        this.getProducts(this.state.pageNow,productPerPage)\r\n    }\r\n    render() {\r\n        return (\r\n            <Card title={\r\n                <span>\r\n                <Search style={{width: 300}}\r\n                        placeholder=\"item name\"\r\n                        allowClear\r\n                        enterButton=\"Search\"\r\n                        size=\"large\"\r\n                        onSearch={this.onSearch}\r\n                />\r\n            </span>}\r\n                  extra={<Button onClick={()=>this.props.history.push('/product/addupdate')} type=\"primary\" icon={<PlusOutlined/>}>Add product</Button>}>\r\n                <Table bordered\r\n                       rowKey='_id'\r\n                       columns={this.columns}\r\n                       pagination={false}\r\n                       dataSource={this.state.productList}/>\r\n                <br/>\r\n                <Pagination current={this.state.pageNow} style={{textAlign: 'right'}} defaultPageSize={productPerPage}\r\n                            defaultCurrent={this.state.pageNow} total={this.state.totalProduct} onChange={this.onChange}/>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default ProductHome","import React,{useEffect,useState} from 'react';\r\nimport {Button, Card, Form, Input, Cascader, message} from \"antd\";\r\nimport {ArrowLeftOutlined} from '@ant-design/icons';\r\nimport {getCategory,addProduct,updateProduct} from \"../../api/ajax\";\r\n\r\nconst { TextArea } = Input;\r\nconst layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 8 },\r\n};\r\nconst addProducts = product=>{\r\n    const item = {\r\n        categoryId: product.category[1]?product.category[1]:product.category[0],\r\n        pCategoryId: product.category[1]?product.category[0]:'0',\r\n        name: product.name,\r\n        price: product.price,\r\n        desc: product.desc,\r\n        status: 1\r\n    };\r\n    addProduct(item).then(response=>{\r\n        if(response.data.status===0) {\r\n            message.success('Success Added!')\r\n        }\r\n        else{\r\n                message.error(response.data.msg)\r\n            }\r\n        }).catch(error => message.error('Error: ' + error));\r\n};\r\n\r\nconst AddUpdate = (props) => {\r\n    const [form] = Form.useForm();\r\n    const [firstCategory, setFirstCategory] = useState([]); //parent category list\r\n    const [childCategory, setChildCategory] = useState([]); //child category list\r\n    const [count, setCount] = useState(0);\r\n    const [options, setOptions] = useState([]);\r\n    const [targetOption,setTargetOption] = useState({});\r\n    //the data from product home page, undefined when press 'add' button\r\n    let data = props.location.state;\r\n    if(!data)\r\n        data = {\r\n            name:'',\r\n            desc:'',\r\n            price:0,\r\n            categoryId:'0',\r\n            pCategoryId:'0'\r\n        };\r\n    //get category list from the server\r\n    function onChange(value) {\r\n        //console.log(value);\r\n    }\r\n    const onFinish=values=>{\r\n        if(props.location.state)\r\n            updateProducts(values);\r\n        else\r\n            addProducts(values)\r\n        //console.log(values)\r\n    };\r\n    const updateProducts = product=>{\r\n        const item = {\r\n            categoryId: product.category[1]?product.category[1]:product.category[0],\r\n            pCategoryId: product.category[1]?product.category[0]:'0',\r\n            name: product.name,\r\n            price: product.price,\r\n            desc: product.desc,\r\n            _id: props.location.state._id,\r\n            status: 1\r\n        };\r\n        updateProduct(item).then(response=>{\r\n            if(response.data.status===0) {\r\n                message.success('Success Changed!')\r\n            }\r\n            else{\r\n                message.error(response.data.msg)\r\n            }\r\n        }).catch(error => message.error('Error: ' + error));\r\n    };\r\n    const getCategories = (id) => {\r\n        getCategory(id).then(response => {\r\n            const category = response.data.data;\r\n            if(id==='0') {\r\n                setFirstCategory(category);\r\n                setCount(1);\r\n            }\r\n            else{\r\n                setChildCategory(category)\r\n            }\r\n        }).catch(error => message.error('Error: ' + error));\r\n\r\n    };\r\n    //map category list into option list shown in the Cascader\r\n    const category = cat =>{\r\n        return cat.map(item=>{\r\n            return(\r\n            {\r\n                value: item._id,\r\n                label:item.name,\r\n                isLeaf: false\r\n            })\r\n        })\r\n    };\r\n    const loadData = selectedOptions => {\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];\r\n        setTargetOption(targetOption);\r\n        //console.log(targetOption.label)\r\n        targetOption.loading = true;\r\n\r\n        getCategories(targetOption.value);\r\n\r\n        //console.log(targetOption.value,targetOption.children);\r\n        //setOptions([...options]);\r\n    };\r\n    useEffect(()=>{\r\n        targetOption.loading = false;\r\n        targetOption.children = childCategory.map(item=>{\r\n            return(\r\n                {\r\n                    value: item._id,\r\n                    label:item.name\r\n                })\r\n        });\r\n        setOptions([...options]);\r\n        console.log(options)\r\n    },[childCategory]);\r\n    useEffect(()=>{\r\n        getCategories('0');\r\n        const pcatList = category(firstCategory);\r\n        if(data.pCategoryId!=='0'){\r\n            setTargetOption(pcatList.find(item=>item.value===data.pCategoryId));\r\n            getCategories(data.pCategoryId)\r\n        }\r\n        setOptions(pcatList)\r\n        //console.log(options)\r\n    },[count]);\r\n    return(\r\n        <Card title={\r\n            <span>\r\n            <ArrowLeftOutlined onClick={()=>window.history.back()} style={{color:'cornflowerblue'}}/>\r\n            Add Product\r\n            </span>\r\n        }>\r\n            <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n                <Form.Item name=\"name\" initialValue={data.name} label=\"Product Name\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"desc\" initialValue={data.desc} label=\"Product Description\" rules={[{ required: true }]}>\r\n                    <TextArea autoSize/>\r\n                </Form.Item>\r\n                <Form.Item name=\"price\" initialValue={data.price} label=\"Product Price\"\r\n                           rules={[\r\n                               {\r\n                                   required: true\r\n                               },\r\n                               ({ getFieldValue }) => ({\r\n                                   validator(rule, value) {\r\n                                       if (!value || getFieldValue('price') >= 0) {\r\n                                           return Promise.resolve();\r\n                                       }\r\n\r\n                                       return Promise.reject('The price must be valid!');\r\n                                   },\r\n                               }),\r\n                           ]}>\r\n                    <Input type='number' suffix=\"Euro\" />\r\n                </Form.Item>\r\n                <Form.Item name=\"category\" label=\"Product Category\" rules={[{required: true}]}\r\n                           initialValue={data.categoryId==='0'?[]:(data.pCategoryId==='0'?[data.categoryId]:[data.pCategoryId, data.categoryId])} >\r\n                    <Cascader options={options} loadData={loadData} onChange={onChange} placeholder=\"Please select\" changeOnSelect/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n    )\r\n};\r\nexport default AddUpdate","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport ProductDetails from \"./ProductDetails\";\r\nimport ProductHome from \"./ProductHome\";\r\nimport AddUpdate from \"./Add-Update\";\r\nimport './product.css'\r\nconst Product = () => {\r\n    return(\r\n        <Switch>\r\n            <Route path='/product/detail' component={ProductDetails}/>\r\n            <Route path='/product/addupdate' component={AddUpdate}/>\r\n            <Route path='/product' component={ProductHome} exact/>\r\n            <Redirect to='/product' />\r\n        </Switch>\r\n    )\r\n}\r\nexport default Product","import React from 'react';\r\nimport {Modal, Form, message, Input} from \"antd\";\r\n\r\nconst AddForm=({ visible, onCreate, onCancel})=>{\r\n    const [form] = Form.useForm();\r\n    return(\r\n        <Modal\r\n            visible={visible}\r\n            title=\"Create new role\"\r\n            okText=\"Create\"\r\n            cancelText=\"Cancel\"\r\n            onCancel={onCancel}\r\n            getContainer={false}\r\n            destroyOnClose={false}\r\n            onOk={() =>{\r\n                form\r\n                    .validateFields()\r\n                    .then((values) => {\r\n                        form.resetFields();\r\n                        onCreate(values);\r\n                    })\r\n                    .catch((info) => {\r\n                        message.error('Validate Failed:', info);\r\n                    });\r\n            }}>\r\n            <Form\r\n                form={form}\r\n                layout=\"vertical\"\r\n                name=\"form_in_modal\">\r\n                <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}>\r\n                    <Input placeholder=\"Please enter role name\"/>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n};\r\nexport default AddForm","import React, {useState,useEffect} from 'react';\r\nimport {Card, Button, Table, message, Tree, Modal} from \"antd\";\r\nimport {getRole, addRole, updateRole} from \"../../api/ajax\";\r\nimport AddForm from \"./AddForm\";\r\nimport menuList from \"../../config/menuConfig\";\r\nimport {Input} from \"antd/es\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\n\r\n\r\nconst data = [{\r\n    title: 'Platform Privilege',\r\n    key: '0-0',\r\n    children: menuList\r\n}];\r\nconst Role = () => {\r\n    const [roleList,setRoleList]=useState([]);\r\n    const [role,setRole]=useState({});\r\n    const [counter,setCounter]=useState(0);\r\n    const [add,setAdd]=useState(false);\r\n    const [set,setSet]=useState(false);\r\n    const [checkedKeys, setCheckedKeys] = useState([]);\r\n    //console.log(role.menus,checkedKeys)\r\n\r\n    const getRoles =()=>{\r\n        getRole().then(response=>{\r\n            if(response.data.status===0){\r\n                const role = response.data.data;\r\n                //console.log(role)\r\n                setRoleList(role);\r\n                setCounter(1);\r\n            }\r\n            else message.error(response.data.msg)\r\n        }).catch(error=>message.error(error))\r\n    };\r\n    const handleCancel = () => {\r\n        setAdd(false);\r\n        setCheckedKeys(role.menus);\r\n        setSet(false)\r\n    };\r\n    const handleSubmit = (value) => {\r\n        addRole(value.name).then(response=>{\r\n            if(response.data.status===0){\r\n                message.success(value.name+' Added');\r\n                setAdd(false);\r\n                setCounter(0);\r\n            }\r\n            else message.error(response.data.msg)\r\n        }).catch(error=>message.error(error));\r\n        //console.log(value)\r\n    };\r\n    const handleSetSubmit = (value) => {\r\n        console.log(value);\r\n        updateRole(role).then(response=>{\r\n            if(response.data.status===0){\r\n                message.success(role.name+' updated');\r\n                setSet(false);\r\n                setCounter(0);\r\n                if(memoryUtils.user.role_id===role._id){\r\n                    memoryUtils.user = {};\r\n                    storageUtils.removeUser();\r\n                    window.location.reload();\r\n                    message.info('role permissions have been changed, please login again!')\r\n                }\r\n            }\r\n            else message.error(response.data.msg)\r\n        }).catch(error=>message.error(error));\r\n    };\r\n    const clickRow = record => {\r\n        return {\r\n            onClick: event => {\r\n                //console.log(record)\r\n                setRole(record);\r\n            }\r\n        }\r\n    };\r\n    const onCheck = (checkedKeys) => {\r\n        console.log('onCheck', checkedKeys);\r\n        setCheckedKeys(checkedKeys);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'Role Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Create Time',\r\n            dataIndex: 'create_time',\r\n            key: 'ctime',\r\n            render:(auth_time)=>new Date(auth_time).toLocaleString()\r\n        },\r\n        {\r\n            title: 'Authorization Time',\r\n            dataIndex: 'auth_time',\r\n            key: 'atime',\r\n            render:(auth_time)=>{\r\n                if(auth_time)\r\n                    return new Date(auth_time).toLocaleString()\r\n            }\r\n        },\r\n        {\r\n            title: 'Authorizer',\r\n            dataIndex: 'auth_name',\r\n            key: 'aname',\r\n        },\r\n\r\n    ];\r\n    useEffect(()=>{\r\n        getRoles();\r\n    },[counter]);\r\n    useEffect(()=>{\r\n        setCheckedKeys(role.menus)\r\n    },[role]);\r\n    return(\r\n        <Card title={\r\n            <span>\r\n                <Button onClick={()=>{setAdd(true)}} type=\"primary\">New Role</Button> &nbsp;\r\n                <Button onClick={()=>{setSet(true)}} type=\"primary\" disabled={!role._id}>Set role permissions</Button>\r\n            </span>}>\r\n            <Table bordered\r\n                   rowSelection={{\r\n                       type: 'radio',\r\n                       selectedRowKeys: [role._id],\r\n                       onSelect: (role)=>{\r\n                           setRole(role);\r\n                       }\r\n                   }}\r\n                   rowKey='_id'\r\n                   onRow={clickRow}\r\n                   columns={columns}\r\n                   dataSource={roleList}/>\r\n                   <AddForm visible={add}\r\n                            onCreate={handleSubmit}\r\n                            onCancel={handleCancel}/>\r\n            <Modal\r\n                visible={set}\r\n                title=\"Edit permissions\"\r\n                okText=\"Submit\"\r\n                cancelText=\"Cancel\"\r\n                onCancel={handleCancel}\r\n                getContainer={false}\r\n                destroyOnClose={true}\r\n                onOk={() =>{\r\n                    const values = role;\r\n                    values.menus = checkedKeys;\r\n                    values.auth_name = memoryUtils.user.username;\r\n                    handleSetSubmit(values);\r\n                    setSet(false)\r\n                }}>\r\n                Role Name: <Input value={role.name} disabled/>\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll={true}\r\n                    onCheck={onCheck}\r\n                    checkedKeys={checkedKeys}\r\n                    treeData={data}/>\r\n            </Modal>\r\n        </Card>\r\n    )\r\n};\r\nexport default Role","import React, {useEffect} from 'react';\r\nimport {Modal, Form, message, Select, Input} from \"antd\";\r\n\r\nconst { Option } = Select;\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n    },\r\n};\r\nconst AddUser = ({ visible, onCreate, onCancel, user, title, roleList}) => {\r\n    const [form] = Form.useForm();\r\n    useEffect(() => {\r\n        if(title!=='Add a user'){\r\n        form.setFieldsValue({\r\n            name:user.username,\r\n            number:user.number,\r\n            email:user.email,\r\n            category:user.role_id,\r\n            password:user.password\r\n        })}\r\n    }, [form,user]);\r\n    const update = () =>\r\n        roleList.map(item=>\r\n            <Option key={item._id} value={item._id}>{item.name}</Option>);\r\n    return(\r\n        <Modal\r\n            visible={visible}\r\n            title={title}\r\n            okText=\"Create\"\r\n            cancelText=\"Cancel\"\r\n            onCancel={onCancel}\r\n            getContainer={false}\r\n            destroyOnClose={false}\r\n            onOk={() =>{\r\n                form\r\n                    .validateFields()\r\n                    .then((values) => {\r\n                        form.resetFields();\r\n                        let newUser = {};\r\n                        if(title!=='Add a user')\r\n                            newUser=user;\r\n                        newUser.username = values.name;\r\n                        newUser.email = values.email;\r\n                        newUser.phone = values.number;\r\n                        newUser.role_id = values.category;\r\n                        newUser.password = values.password;\r\n                        onCreate(newUser);\r\n                    })\r\n                    .catch((info) => {\r\n                        message.error('Validate Failed:', info);\r\n                    });\r\n            }}>\r\n            <Form\r\n                form={form}\r\n                layout=\"vertical\"\r\n                validateMessages={validateMessages}\r\n                name=\"form_in_modal\">\r\n                <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}>\r\n                    <Input placeholder=\"Please enter user name\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    hidden={title!=='Add a user'}\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}>\r\n                    <Input.Password placeholder=\"Please enter password\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"number\"\r\n                    label=\"Mobile number\">\r\n                    <Input placeholder=\"Please enter mobile number\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    rules={[\r\n                        {\r\n                            type: 'email',\r\n                        },\r\n                    ]}>\r\n                    <Input placeholder=\"Please enter email\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"category\"\r\n                    label=\"Category\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                        },\r\n                    ]}>\r\n                    <Select placeholder=\"Please select role\">\r\n                        {update()}\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n};\r\nexport default AddUser","import React, {useState,useEffect} from 'react';\r\nimport {Card, Button, Table, message, Space, Modal} from \"antd\";\r\nimport AddUser from \"./AddUser\";\r\nimport {getUser, addUser, updateUser, deleteUser, deleteCategory} from \"../../api/ajax\";\r\nimport LinkButton from \"../../components/linkbutton/LinkButton\";\r\n\r\nconst User = () => {\r\n    const [userList, setUserList] = useState([]);\r\n    const [roleList, setRoleList] = useState([]);\r\n    const [counter,setCounter]=useState(0);\r\n    const [add, setAdd] = useState(false);\r\n    const [user, setUser] = useState({});\r\n    const [addTitle, setAddTitle] = useState('');\r\n    const getUsers =()=>{\r\n        getUser().then(response=>{\r\n            if(response.data.status===0){\r\n                console.log(response.data.data);\r\n                const users = response.data.data.users;\r\n                const roles = response.data.data.roles;\r\n                setUserList(users);\r\n                setRoleList(roles);\r\n                setCounter(1)\r\n            }\r\n            else message.error(response.data.msg)\r\n        }).catch(error=>message.error(error))\r\n    };\r\n    const addUsers=value=>{\r\n        if(addTitle==='Add a user'){\r\n            addUser(value).then(response=>{\r\n                if(response.data.status===0){\r\n                    console.log(response.data.data);\r\n                    message.success('success added!');\r\n                    setCounter(0)\r\n                }\r\n                else message.error(response.data.msg)\r\n            }).catch(error=>message.error(error))\r\n        }\r\n        else{\r\n            updateUser(value).then(response=>{\r\n                if(response.data.status===0){\r\n                    console.log(response.data.data);\r\n                    message.success('success added!');\r\n                    setCounter(0)\r\n                }\r\n                else message.error(response.data.msg)\r\n            }).catch(error=>message.error(error))\r\n        }\r\n        console.log(value);\r\n        setAdd(false);\r\n    };\r\n    const updateUsers=user=>{\r\n        setAddTitle('Edit'+user.username);\r\n        setAdd(true);\r\n        setUser(user);\r\n    };\r\n    const delUser=user=>{\r\n        const { confirm } = Modal;\r\n        confirm({\r\n            title: 'Are you Sure to delete ' + user.username +'?',\r\n            onOk() {\r\n                //console.log(Id,name);\r\n                deleteUser(user._id).then(response=>{\r\n                    if(response.data.status===0) {\r\n                        //console.log(response.data)\r\n                        message.success(user.username + ' has been deleted');\r\n                        setCounter(0)\r\n                    }\r\n                    else{\r\n                        message.error(response.data.msg)\r\n                    }\r\n                }).catch(error => message.error('Error: ' + error));\r\n            },\r\n        });\r\n    };\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Phone number',\r\n            dataIndex: 'phone',\r\n            key: 'phone',\r\n        },\r\n        {\r\n            title: 'Create Time',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time',\r\n            render:(create_time)=>new Date(create_time).toLocaleString()\r\n        },\r\n        {\r\n            title: 'Role',\r\n            dataIndex: 'role_id',\r\n            key: 'role_id',\r\n            render: (role_id)=>{\r\n                if(role_id && roleList.length>0){\r\n                    //console.log(role_id,roleList);\r\n                    return roleList.find(item=>item._id===role_id).name\r\n                }}\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            width:300,\r\n            render: (text) => (\r\n                <Space size=\"middle\">\r\n                    <LinkButton click={()=>updateUsers(text)} text='Edit'/>\r\n                    <LinkButton click={()=>{delUser(text)}} text='Delete'/>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n    useEffect(()=>{\r\n        getUsers();\r\n    },[counter]);\r\n    return(\r\n        <Card title={\r\n            <span>\r\n                <Button onClick={()=>{setAdd(true); setAddTitle('Add a user')}} type=\"primary\">New User</Button>\r\n            </span>}>\r\n            <Table bordered\r\n                   rowKey='_id'\r\n                   columns={columns}\r\n                   dataSource={userList}/>\r\n            <AddUser visible={add}\r\n                     onCreate={addUsers}\r\n                     onCancel={()=>setAdd(false)}\r\n                     user={user}\r\n                     title={addTitle}\r\n                     roleList={roleList}/>\r\n        </Card>\r\n    )\r\n};\r\nexport default User","import React from 'react';\r\nimport './home.css'\r\nconst Home = () => {\r\n    return(\r\n        <div className='home'>\r\n            <h1 className='home-word'>Welcome to Products Background Management System!</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Home","import React from 'react';\r\nimport {Redirect,Route,Switch} from 'react-router-dom';\r\nimport { Layout } from 'antd';\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport LeftNav from \"../../components/leftnav/LeftNav\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Category from \"../category/Category\";\r\nimport Bar from \"../charts/Bar\";\r\nimport Linechart from \"../charts/Line\";\r\nimport Pie from \"../charts/Pie\";\r\nimport Product from \"../product/Product\";\r\nimport Role from \"../role/Role\";\r\nimport User from \"../user/User\";\r\nimport Home from \"../home/Home\";\r\n/*\r\nadmin routing component\r\n*/\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\nclass Admin extends React.Component {\r\n    //console.log(Admin.location.pathname)\r\n    user = memoryUtils.user;\r\n\r\n    render() {\r\n        if (!this.user || !this.user._id) {\r\n            //not login, go to login page\r\n            return <Redirect to='/login'/>\r\n        }\r\n        return (\r\n            <Layout style={{height: '100%'}}>\r\n                <Sider>\r\n                    <LeftNav path={this.props.location.pathname}/>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header user={this.user.username} path={this.props.location.pathname}>Header</Header>\r\n                    <Content style={{margin:20, backgroundColor: 'white'}}>\r\n                        <Switch>\r\n                            <Route path='/home' component={Home}/>\r\n                            <Route path='/category' component={Category}/>\r\n                            <Route path='/product' component={Product}/>\r\n                            <Route path='/user' component={User}/>\r\n                            <Route path='/role' component={Role}/>\r\n                            <Route path='/pie' component={Pie}/>\r\n                            <Route path='/line' component={Linechart}/>\r\n                            <Route path='/bar' component={Bar}/>\r\n                            <Redirect to='/home'/>\r\n                        </Switch>\r\n                    </Content>\r\n                    <Footer style={{textAlign: 'center', color: '#cccccc'}}>Use Chrome to get better\r\n                        experience!</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nexport default Admin","/*根组件*/\r\nimport React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\n//import { Button, message } from 'antd';\r\nimport './App.less';\r\nimport Login from \"./pages/login/Login\";\r\nimport Admin from \"./pages/admin/Admin\";\r\nconst  App = () =>{\r\n return(\r\n     <BrowserRouter>\r\n      <Switch>\r\n      <Route path = '/login' component = {Login} />\r\n      <Route path = '/' component = {Admin} />\r\n      </Switch>\r\n     </BrowserRouter>\r\n )\r\n}\r\nexport  default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from \"./App\";\nimport storageUtils from \"./utils/storageUtils\";\nimport memoryUtils from \"./utils/memoryUtils\";\n\nconst user = storageUtils.getUser();\nmemoryUtils.user = user;\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}